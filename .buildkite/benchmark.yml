steps:
  ### Julia ###
  - label: "Run QuantumToolbox.jl benchmarks with CUDA"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    command: |
      julia --project=benchmark/QuantumToolbox.jl -e 'println("--- Instantiating project ---")
          using Pkg
          Pkg.instantiate()'

      julia --project=benchmark/QuantumToolbox.jl -e 'println("--- Run Benchmarks ---")
          include("benchmark/QuantumToolbox.jl/runbenchmarks.jl")'
    artifact_paths:
      - "benchmark/results/*"
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      GROUP: "CUDA"
    timeout_in_minutes: 60

  - label: "Run QuTiP benchmarks"
    command: |
      mkdir -p ~/miniconda3
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
      bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
      source ~/miniconda3/bin/activate
      conda init --all

      conda create -y -n qutip-benchmark python
      conda activate qutip-benchmark

      python3 --version
      pip3 --version

      pip3 install -r benchmark/qutip/requirements.txt

      python3 -m benchmark.qutip.runbenchmark -v -s
    artifact_paths:
      - "benchmark/results/*"
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 60

  #- label: "Run dynamiqs benchmarks with CUDA"
  #  ...
  #  env:
  #    GROUP: "CUDA"